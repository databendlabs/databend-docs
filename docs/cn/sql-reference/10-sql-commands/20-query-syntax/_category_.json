```markdown
# 查询语法

Databend 支持多种查询语法，允许用户以多种方式检索和分析数据。以下是一些主要的查询语法示例。

## SELECT 语句 {/*examples*/}

`SELECT` 语句用于从一个或多个表中选择数据。基本语法如下：

```sql
SELECT column1, column2, ...
FROM table_name
WHERE condition;
```

### 示例

假设我们有一个名为 `employees` 的表，包含 `name` 和 `age` 两个列。以下是一个简单的 `SELECT` 语句示例，用于选择所有员工的姓名和年龄：

```sql
SELECT name, age
FROM employees;
```

## WHERE 子句

`WHERE` 子句用于过滤记录，只返回满足指定条件的记录。基本语法如下：

```sql
SELECT column1, column2, ...
FROM table_name
WHERE condition;
```

### 示例

继续使用 `employees` 表的示例，如果我们只想选择年龄大于 30 的员工，我们可以使用 `WHERE` 子句如下：

```sql
SELECT name, age
FROM employees
WHERE age > 30;
```

## JOIN 操作

`JOIN` 操作用于结合两个或多个表的行。Databend 支持多种类型的 JOIN，包括 `INNER JOIN`、`LEFT JOIN`、`RIGHT JOIN` 和 `FULL JOIN`。

### 示例

假设我们除了 `employees` 表外，还有一个 `departments` 表，其中包含每个部门的 `id` 和 `name`。以下是一个使用 `INNER JOIN` 来选择所有员工及其所属部门名称的示例：

```sql
SELECT employees.name, departments.name
FROM employees
INNER JOIN departments ON employees.department_id = departments.id;
```

<Notes>

请注意，这只是 Databend 支持的查询语法的一小部分示例。Databend 提供了丰富的功能和灵活的查询选项，以满足各种数据检索和分析需求。

</Notes>
```