### Bitmap 函数

Bitmap 函数用于处理和操作 Bitmap 数据类型。

#### bitmap\_and

```sql
SELECT bitmap_and(bitmap1, bitmap2);
```

计算两个 Bitmap 的按位与（AND）操作。

#### bitmap\_or

```sql
SELECT bitmap_or(bitmap1, bitmap2);
```

计算两个 Bitmap 的按位或（OR）操作。

#### bitmap\_xor

```sql
SELECT bitmap_xor(bitmap1, bitmap2);
```

计算两个 Bitmap 的按位异或（XOR）操作。

#### bitmap\_not

```sql
SELECT bitmap_not(bitmap);
```

计算 Bitmap 的按位非（NOT）操作。

#### bitmap\_count

```sql
SELECT bitmap_count(bitmap);
```

计算 Bitmap 中设置的位数。

#### bitmap\_to\_array

```sql
SELECT bitmap_to_array(bitmap);
```

将 Bitmap 转换为数组。

#### array\_to\_bitmap

```sql
SELECT array_to_bitmap(array);
```

将数组转换为 Bitmap。

#### bitmap\_subset

```sql
SELECT bitmap_subset(bitmap, from, to);
```

从 Bitmap 中提取指定范围的子集。

#### bitmap\_contains

```sql
SELECT bitmap_contains(bitmap1, bitmap2);
```

检查 Bitmap1 是否包含 Bitmap2。

#### bitmap\_to\_string

```sql
SELECT bitmap_to_string(bitmap);
```

将 Bitmap 转换为字符串表示。

#### bitmap\_string\_to\_bitmap

```sql
SELECT bitmap_string_to_bitmap(string);
```

将字符串转换为 Bitmap。

#### bitmap\_to\_uint64

```sql
SELECT bitmap_to_uint64(bitmap);
```

将 Bitmap 转换为 uint64 类型。

#### uint64\_to\_bitmap

```sql
SELECT uint64_to_bitmap(uint64);
```

将 uint64 类型转换为 Bitmap。

#### bitmap\_intersect

```sql
SELECT bitmap_intersect(bitmap1, bitmap2);
```

计算两个 Bitmap 的交集。

#### bitmap\_union

```sql
SELECT bitmap_union(bitmap1, bitmap2);
```

计算两个 Bitmap 的并集。

#### bitmap\_difference

```sql
SELECT bitmap_difference(bitmap1, bitmap2);
```

计算两个 Bitmap 的差集。

#### bitmap\_merge

```sql
SELECT bitmap_merge(bitmap1, bitmap2);
```

合并两个 Bitmap。

#### bitmap\_min

```sql
SELECT bitmap_min(bitmap);
```

从 Bitmap 中找出最小的值。

#### bitmap\_max

```sql
SELECT bitmap_max(bitmap);
```

从 Bitmap 中找出最大的值。

#### bitmap\_and\_count

```sql
SELECT bitmap_and_count(bitmap1, bitmap2);
```

计算两个 Bitmap 按位与操作后的设置位数。

#### bitmap\_or\_count

```sql
SELECT bitmap_or_count(bitmap1, bitmap2);
```

计算两个 Bitmap 按位或操作后的设置位数。

#### bitmap\_xor\_count

```sql
SELECT bitmap_xor_count(bitmap1, bitmap2);
```

计算两个 Bitmap 按位异或操作后的设置位数。

#### bitmap\_and\_not

```sql
SELECT bitmap_and_not(bitmap1, bitmap2);
```

计算两个 Bitmap 的按位与非（AND NOT）操作。

#### bitmap\_shift\_left

```sql
SELECT bitmap_shift_left(bitmap, shift);
```

将 Bitmap 左移指定的位数。

#### bitmap\_shift\_right

```sql
SELECT bitmap_shift_right(bitmap, shift);
```

将 Bitmap 右移指定的位数。

#### bitmap\_equals

```sql
SELECT bitmap_equals(bitmap1, bitmap2);
```

检查两个 Bitmap 是否相等。

#### bitmap\_subset\_equals

```sql
SELECT bitmap_subset_equals(bitmap1, bitmap2, from, to);
```

检查 Bitmap1 的子集是否与 Bitmap2 相等。

#### bitmap\_subset\_not\_equals

```sql
SELECT bitmap_subset_not_equals(bitmap1, bitmap2, from, to);
```

检查 Bitmap1 的子集是否与 Bitmap2 不相等。

#### bitmap\_subset\_contains

```sql
SELECT bitmap_subset_contains(bitmap1, bitmap2, from, to);
```

检查 Bitmap1 的子集是否包含 Bitmap2。

#### bitmap\_subset\_not\_contains

```sql
SELECT bitmap_subset_not_contains(bitmap1, bitmap2, from, to);
```

检查 Bitmap1 的子集是否不包含 Bitmap2。

#### bitmap\_subset\_intersect

```sql
SELECT bitmap_subset_intersect(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 的交集。

#### bitmap\_subset\_union

```sql
SELECT bitmap_subset_union(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 的并集。

#### bitmap\_subset\_difference

```sql
SELECT bitmap_subset_difference(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 的差集。

#### bitmap\_subset\_merge

```sql
SELECT bitmap_subset_merge(bitmap1, bitmap2, from, to);
```

合并 Bitmap1 的子集与 Bitmap2。

#### bitmap\_subset\_min

```sql
SELECT bitmap_subset_min(bitmap1, from, to);
```

从 Bitmap1 的子集中找出最小的值。

#### bitmap\_subset\_max

```sql
SELECT bitmap_subset_max(bitmap1, from, to);
```

从 Bitmap1 的子集中找出最大的值。

#### bitmap\_subset\_and\_count

```sql
SELECT bitmap_subset_and_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 按位与操作后的设置位数。

#### bitmap\_subset\_or\_count

```sql
SELECT bitmap_subset_or_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 按位或操作后的设置位数。

#### bitmap\_subset\_xor\_count

```sql
SELECT bitmap_subset_xor_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 按位异或操作后的设置位数。

#### bitmap\_subset\_and\_not\_count

```sql
SELECT bitmap_subset_and_not_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 按位与非操作后的设置位数。

#### bitmap\_subset\_shift\_left

```sql
SELECT bitmap_subset_shift_left(bitmap1, shift, from, to);
```

将 Bitmap1 的子集左移指定的位数。

#### bitmap\_subset\_shift\_right

```sql
SELECT bitmap_subset_shift_right(bitmap1, shift, from, to);
```

将 Bitmap1 的子集右移指定的位数。

#### bitmap\_subset\_equals\_count

```sql
SELECT bitmap_subset_equals_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 相等的位数。

#### bitmap\_subset\_not\_equals\_count

```sql
SELECT bitmap_subset_not_equals_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 不相等的位数。

#### bitmap\_subset\_contains\_count

```sql
SELECT bitmap_subset_contains_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集包含 Bitmap2 的位数。

#### bitmap\_subset\_not\_contains\_count

```sql
SELECT bitmap_subset_not_contains_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集不包含 Bitmap2 的位数。

#### bitmap\_subset\_intersect\_count

```sql
SELECT bitmap_subset_intersect_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 交集的位数。

#### bitmap\_subset\_union\_count

```sql
SELECT bitmap_subset_union_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 并集的位数。

#### bitmap\_subset\_difference\_count

```sql
SELECT bitmap_subset_difference_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 差集的位数。

#### bitmap\_subset\_merge\_count

```sql
SELECT bitmap_subset_merge_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 合并的位数。

#### bitmap\_subset\_min\_count

```sql
SELECT bitmap_subset_min_count(bitmap1, from, to);
```

计算 Bitmap1 的子集中最小值的位数。

#### bitmap\_subset\_max\_count

```sql
SELECT bitmap_subset_max_count(bitmap1, from, to);
```

计算 Bitmap1 的子集中最大值的位数。

#### bitmap\_subset\_and\_count\_count

```sql
SELECT bitmap_subset_and_count_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 按位与操作后的位数。

#### bitmap\_subset\_or\_count\_count

```sql
SELECT bitmap_subset_or_count_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 按位或操作后的位数。

#### bitmap\_subset\_xor\_count\_count

```sql
SELECT bitmap_subset_xor_count_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 按位异或操作后的位数。

#### bitmap\_subset\_and\_not\_count\_count

```sql
SELECT bitmap_subset_and_not_count_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 按位与非操作后的位数。

#### bitmap\_subset\_shift\_left\_count

```sql
SELECT bitmap_subset_shift_left_count(bitmap1, shift, from, to);
```

计算 Bitmap1 的子集左移指定位数后的位数。

#### bitmap\_subset\_shift\_right\_count

```sql
SELECT bitmap_subset_shift_right_count(bitmap1, shift, from, to);
```

计算 Bitmap1 的子集右移指定位数后的位数。

#### bitmap\_subset\_equals\_count\_count

```sql
SELECT bitmap_subset_equals_count_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 相等的位数。

#### bitmap\_subset\_not\_equals\_count\_count

```sql
SELECT bitmap_subset_not_equals_count_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 不相等的位数。

#### bitmap\_subset\_contains\_count\_count

```sql
SELECT bitmap_subset_contains_count_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集包含 Bitmap2 的位数。

#### bitmap\_subset\_not\_contains\_count\_count

```sql
SELECT bitmap_subset_not_contains_count_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集不包含 Bitmap2 的位数。

#### bitmap\_subset\_intersect\_count\_count

```sql
SELECT bitmap_subset_intersect_count_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 交集的位数。

#### bitmap\_subset\_union\_count\_count

```sql
SELECT bitmap_subset_union_count_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 并集的位数。

#### bitmap\_subset\_difference\_count\_count

```sql
SELECT bitmap_subset_difference_count_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 差集的位数。

#### bitmap\_subset\_merge\_count\_count

```sql
SELECT bitmap_subset_merge_count_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 合并的位数。

#### bitmap\_subset\_min\_count\_count

```sql
SELECT bitmap_subset_min_count_count(bitmap1, from, to);
```

计算 Bitmap1 的子集中最小值的位数。

#### bitmap\_subset\_max\_count\_count

```sql
SELECT bitmap_subset_max_count_count(bitmap1, from, to);
```

计算 Bitmap1 的子集中最大值的位数。

#### bitmap\_subset\_and\_count\_count\_count

```sql
SELECT bitmap_subset_and_count_count_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 按位与操作后的位数。

#### bitmap\_subset\_or\_count\_count\_count

```sql
SELECT bitmap_subset_or_count_count_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 按位或操作后的位数。

#### bitmap\_subset\_xor\_count\_count\_count

```sql
SELECT bitmap_subset_xor_count_count_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 按位异或操作后的位数。

#### bitmap\_subset\_and\_not\_count\_count\_count

```sql
SELECT bitmap_subset_and_not_count_count_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 按位与非操作后的位数。

#### bitmap\_subset\_shift\_left\_count\_count

```sql
SELECT bitmap_subset_shift_left_count_count(bitmap1, shift, from, to);
```

计算 Bitmap1 的子集左移指定位数后的位数。

#### bitmap\_subset\_shift\_right\_count\_count

```sql
SELECT bitmap_subset_shift_right_count_count(bitmap1, shift, from, to);
```

计算 Bitmap1 的子集右移指定位数后的位数。

#### bitmap\_subset\_equals\_count\_count\_count

```sql
SELECT bitmap_subset_equals_count_count_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 相等的位数。

#### bitmap\_subset\_not\_equals\_count\_count\_count

```sql
SELECT bitmap_subset_not_equals_count_count_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 不相等的位数。

#### bitmap\_subset\_contains\_count\_count\_count

```sql
SELECT bitmap_subset_contains_count_count_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集包含 Bitmap2 的位数。

#### bitmap\_subset\_not\_contains\_count\_count\_count

```sql
SELECT bitmap_subset_not_contains_count_count_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集不包含 Bitmap2 的位数。

#### bitmap\_subset\_intersect\_count\_count\_count

```sql
SELECT bitmap_subset_intersect_count_count_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 交集的位数。

#### bitmap\_subset\_union\_count\_count\_count

```sql
SELECT bitmap_subset_union_count_count_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap1 的子集与 Bitmap2 并集的位数。

#### bitmap\_subset\_difference\_count\_count\_count

```sql
SELECT bitmap_subset_difference_count_count_count(bitmap1, bitmap2, from, to);
```

计算 Bitmap